# This file defines a multi-container Docker application with two services: a web application running with Gunicorn and an Nginx web server. The services are configured to work together, with Nginx acting as a reverse proxy to the Gunicorn server.


# Define the version of the Compose file format. This determines which features are available and how the file is interpreted.
version: '3'  # Specifies the version of Docker Compose to be used. Version 3 is a common version with support for newer features.

services:  # Begins the definition of services. Services are containers that make up your application.

  web:  # Defines the first service, named 'web'. This could be a web server or web application.
    build: .  # Tells Docker to build the image for this service using the Dockerfile in the current directory.
    command: gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 4  # Overrides the default command to start the application with gunicorn, binding it to port 8000 and using 4 worker processes.
    volumes:
      - .:/code  # Mounts the current directory (host) to '/code' in the container. Useful for development to reflect code changes without rebuilding the container.
    expose:
      - "8000"  # Informs Docker that the container listens on port 8000 at runtime. Note that this does not publish the port to the host.

  nginx:  # Defines the second service, 'nginx', which is a web server to handle HTTP requests.
    image: nginx:latest  # Specifies to use the latest nginx image from Docker Hub instead of building from a Dockerfile.
    ports:
      - "80:80"  # Maps port 80 on the host to port 80 on the nginx container, making the web server accessible from outside the Docker environment.
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro  # Mounts a custom nginx configuration file from the host to the container in read-only mode.
    depends_on:
      - web  # Specifies that the nginx service depends on the web service. Docker Compose will start the web service first.
